مرحباً Manus،

أرجو تنفيذ التحديثات التالية بدقة لجعل مشروع ValorSage-replit-agent نظاماً واحداً متكاملاً يُشغل كافة الوظائف من داخل منصة واحدة دون تقسيمها إلى ملفات منفصلة أو سكريبتات منفصلة. الهدف هو أن يكون النظام بيئة تطوير شاملة تستطيع من خلالها إنشاء وتحديث وإدارة مشاريع داخلية وربطها بـ GitHub وقواعد بيانات متعددة، مع نظام نقاط داخلي لإدارة وتحفيز المستخدمين. فيما يلي المتطلبات والتقنيات الأساسية:

────────────────────────────
1. تكامل النظام وإعداداته المركزية
	•	لوحة إعدادات متكاملة:
	•	يجب أن تكون لوحة الإعدادات شاملة وتتحكم في كل معايير المشروع (تغيير الثيم – الوضع الليلي/النهاري، تغيير اللغة، إدارة الحسابات، إدارة البيانات، وغيرها).
	•	تضمين خيار “تحديث المشروع” الذي يقوم بجلب آخر التحديثات وتطبيقها تلقائياً مع عرض تقرير الأخطاء والملاحظات في الوقت الحقيقي.

────────────────────────────
2. دعم المشاريع الداخلية ونظام النقاط
	•	المشاريع الداخلية:
	•	يجب أن يمكنني إنشاء مشاريع فرعية داخل النظام (مثال: تطوير لعبة أو تطبيق صغير) وإدارتها من خلال نفس الواجهة، بحيث تكون قابلة للتحديث وربطها مباشرة مع GitHub ونشرها على Netlify.
	•	نظام النقاط:
	•	إدراج نظام نقاط متكامل داخل النظام بحيث يمكنني شراء أو كسب النقاط التي تُستخدم لإدارة وتحديث المشاريع أو الحصول على ميزات إضافية.

────────────────────────────
3. الربط مع GitHub وقواعد البيانات
	•	GitHub:
	•	دعم الربط المباشر مع GitHub لجميع المشاريع الداخلية لتحديث الكود وسحب التغييرات تلقائياً.
	•	قواعد البيانات:
	•	توفير دعم ربط مع قواعد بيانات ديناميكية (مثل MongoDB أو Firebase أو PostgreSQL) لكل مشروع داخلي لإدارة البيانات بشكل منفصل وسلس.

────────────────────────────
4. تحسين الأداء والمحاكاة الداخلية
	•	محرك الأداء والمحاكاة:
	•	تعزيز أداء النظام باستخدام خوارزميات رياضية متقدمة لتحسين سرعة وتنظيم العمليات الداخلية.
	•	تطوير محرك محاكاة متكامل قادر على تشغيل السكريبتات المدمجة وتحليل الأداء في الوقت الحقيقي، مع تنبيهات فورية في حالة وجود أخطاء.
	•	محرك الأسرار:
	•	تأمين إدارة المتغيرات الحساسة باستخدام ملف .env ونظام تشفير داخلي لضمان الحفاظ على السرية والأمان.

────────────────────────────
5. أهداف النظام العام
أريد أن يكون المشروع منصة تطوير متكاملة تسمح لي بـ:
	•	إنشاء وإدارة مشاريع داخلية مُحدثة تلقائياً عبر زر “تحديث المشروع”.
	•	ربط كل مشروع داخلي مع GitHub وقاعدة بيانات مستقلة ونشره على Netlify بشكل سلس.
	•	استخدام نظام إعدادات مركزي يتيح التحكم بكافة معايير المشروع (الثيمات، اللغة، إدارة الحسابات والبيانات، تصحيح الأخطاء) ضمن منصة واحدة.
	•	دمج نظام نقاط لتشجيع التحديثات وإدارة المهام داخل النظام.
	•	تحسين الأداء والمحاكاة باستخدام محرك داخلي قوي يعتمد على خوارزميات متقدمة لضمان سرعة التنفيد وتنظيم الموارد.

────────────────────────────
التقنيات المقترحة لتحقيق ذلك:
	•	الواجهة الأمامية: React مع Tailwind CSS وFramer Motion لتصميم واجهة ديناميكية وجذابة.
	•	النشر: نقل المشروع إلى Netlify وتوفير رابط دائم يعمل بشكل مستقل.
	•	الخادم: Node.js مع Docker لتشغيل الأكواد في بيئة معزولة، مع نظام JWT للمصادقة الآمنة.
	•	الاتصال: WebSockets (Socket.IO) للتعاون والتحديثات الفورية.
	•	الربط والتكامل: GitHub API لدمج التحديثات تلقائياً، وقواعد بيانات مثل MongoDB أو Firebase أو PostgreSQL لإدارة البيانات.

────────────────────────────
الخلاصة:

أرجو تنفيذ جميع النقاط أعلاه بحيث يصبح مشروع ValorSage-replit-agent نظامًا واحدًا متكاملاً، قادرًا على إنشاء وإدارة مشاريع داخلية وربطها بـ GitHub وقواعد البيانات، مع لوحة إعدادات مركزية ونظام نقاط قوي وتحديثات تلقائية، ونشر كل ذلك على Netlify من دون أية أخطاء أو تقسيم غير مبرر للوظائف.
يرجى التأكد أن النظام يُشغل كل شيء من جهة الواجهة والخادم، مع تقرير فوري للأخطاء وآلية تصحيح ذاتية قدر الإمكان.

إذا احتجت المزيد من التوضيح أو تفاصيل تقنية إضافية، أنا جاهز للمساعدة.

شكرًا لتنفيذك الدقيق لهذا التحديث.

— حمود